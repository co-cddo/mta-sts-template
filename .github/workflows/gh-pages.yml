name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: [Configure and maintain mta-sts.txt]
    types:
      - completed
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      is_template: ${{ steps.is_template.outputs.is_template }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: |
          echo "REPOSITORY_NAME=$(
            echo '${{ github.repository }}' \
            | awk -F '/' '{print $2}' \
            | tr '-' '_' \
            | tr '[:upper:]' '[:lower:]' \
          )" >> $GITHUB_ENV
      - id: is_template
        run: |
          if [ "$REPOSITORY_NAME" == "mta_sts_template" ]; then
            echo "is_template=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_template=$(ls .github/template.yml &> /dev/null && echo true || echo false)" >> "$GITHUB_OUTPUT"
          fi

  build:
    if: ${{ needs.check.outputs.is_template == 'false' }}
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        if: env.IS_TEMPLATE != 'true'
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        if: env.IS_TEMPLATE != 'true'
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        if: env.IS_TEMPLATE != 'true'
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    if: ${{ needs.check.outputs.is_template == 'false' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
